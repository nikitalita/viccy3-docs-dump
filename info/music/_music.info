== Structure ==

# Tracks are split into in-game tracks and main themes.
# Standard tracks must be specified in the game/music/music.txt file.
# Main themes must be specified in the game/music/main_themes/music.txt file.

name_of_the_music_track = {
	
	# Path to the audio event for this track
	music = "event:/..."
	
	# Determines the value to add to the music system's pause factor counter. This determines how long the pause should be between tracks, default: 0
	# NOTE: This can only be applied to in-game tracks (not to main themes)
	pause_factor = X
	
	# Is this track a mood track (i.e. a long track that the game can pick and doesn't need to be explicitly triggered)? default: no
	# NOTE: This can only be applied to in-game tracks (not to main themes)
	mood = yes/no
	
	# Should this mood track get prioritized for a first time play over other tracks? (Useful for tracks with a narrow is_valid trigger) default: no
	# NOTE: This can only be applied to in-game tracks (not to main themes)
	prioritized_mood = yes/no

	# Is this mood track valid to be played, only evaluated if playing or observing a specific character
	# NOTE: This can only be applied to in-game tracks (not to main themes)
	is_valid = { <trigger> }

	# Can this track be interrupted by another track? Long mood track are good candidates for interrupting. default : no
	can_be_interrupted = yes/no
	
	# Cooldown in in-game time, the track will not be played for this amount of time after it has been started
	years/months/days = X
	
	# Cooldown in calls. After the track starts playing, it will not play again for X subsequent requests to play it. default : 0
	calls = X
	
	# Does this track's cooldown reset when starting/loading a game? default : no
	reset = yes/no

	# Only play this track if the user has the DLC specified here
	# NOTE: This can only be applied to main themes. To get similar behavior for in-game tracks, the general-purpose is_valid can be used instead
	dlc = "NAME OF THE DLC"
}
